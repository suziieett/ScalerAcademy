public class Solution {
    
    public static HashSet<ArrayList<Integer>> hs = new HashSet<>();
    public ArrayList<ArrayList<Integer>> subsetsWithDup(ArrayList<Integer> A) {
        
        // Clear out default hashset value
        hs = new HashSet < > ();
        
        if(A==null)
            return null;

        Collections.sort(A);
        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
        
        // Adding empty arraylist 
        result.add(new ArrayList<Integer>());
        
        for(int i=0;i<A.size();i++)
            subsets(A, result, new ArrayList(),i);
        return result;
    }
    public void subsets(ArrayList<Integer> A, ArrayList<ArrayList<Integer>> result, ArrayList<Integer> temp, int i){
        temp.add(A.get(i));

        // If element is not duplicate then only add list to result
        if(!hs.contains(temp)){
            hs.add(temp);
            result.add(temp); 
        }
        
        if(i==A.size())
            return;
        for(int j=i+1;j<A.size();j++){
            subsets(A, result, new ArrayList<Integer>(temp), j);
        }
    }
}
