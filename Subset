public class Solution {
    public ArrayList<ArrayList<Integer>> subsets(ArrayList<Integer> A) {
        if(A==null)
            return null;
        int n = A.size();
        Collections.sort(A);
        
        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
        
        // Add an empty list
        result.add(new ArrayList<Integer>());
        
        for(int i=0;i<A.size();i++)
            subSets(A, result, new ArrayList(),i);
        return result;
    }
    
    public void subSets(ArrayList<Integer> A, ArrayList<ArrayList<Integer>> result, ArrayList<Integer> temp, int i){
        temp.add(A.get(i));
        result.add(temp); 
        if(i==A.size())
            return;
        for(int j=i+1;j<A.size();j++){
            // Calling susbet function recursively but here with temp arraylist passing the old value of temp everytime
            // evertime the value of j become i when calling fuction
            subSets(A, result, new ArrayList<Integer>(temp), j);
        }
    }
}
