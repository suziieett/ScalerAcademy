public class Solution {
    public int maxArr(int[] A) {
    
        int min1 = Integer.MAX_VALUE, max1 = Integer.MIN_VALUE, min2 = Integer.MAX_VALUE, max2 = Integer.MIN_VALUE;;
        
        // By removing the absolute symbol, we can get 4-cases
        // Case 1: A[i] >= A[j] and i>=j
        // => (A[i] - A[j]) + (i - j) => (A[i] + i) - (A[j] + j) ---> "Value + Index" -> Means (Value + Index) will give either Max value or Min value
                
        // Case 2: A[i] >= A[j] and i<=j
        // => (A[i] - A[j]) + (j - i) => (A[i] - i) - (A[j] - j) ---> "Value - Index" -> Means (Value - Index) will give either Max value or Min value
        
        // Case 3: A[i] <= A[j] and i>=j
        // => (A[j] - A[i]) + (i - j) => (A[j] - j) - (A[i] - i) ---> "Value - Index" -> Means (Value - Index) will give either Max value or Min value
        
        // Case 4: A[i] <= A[j] and i<=j
        // => (A[j] - A[i]) + (j - i) => (A[j] + j) - (A[i] + i) ---> "Value + Index" -> Means (Value + Index) will give either Max value or Min value
        
        // Here case 1 & 4 are same and case 2 & 3 are same. So, all 4 cases reduces to only 2 cases i.e. case 1 and 2 only
        
        
        for(int i=0; i<A.length; i++){
        
            // case 1
            max1 = Math.max(max1, A[i]+i+1);
            min1 = Math.min(min1, A[i]+i+1);
            
            //Case 2
            max2 = Math.max(max2, A[i]-i-1);
            min2 = Math.min(min2, A[i]-i-1);
        }
        return (Math.max(max1-min1, max2-min2));
    }
}
